
name: Workflow to sonarscan repository, build jar file with maven and publish to xNexus
on:
 workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shadloww clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=shaileshtest_shaileshtest -Dsonar.qualitygate.wait=true
     # - name: SonarQube Quality Gate Check
      #  env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        #  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       # You may pin to the exact commit or the version.
       # uses: SonarSource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496
        #uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
           
      - name: Maven build Jar file and publish to nexus  # this commands needs to be changed      
        run: |
         mvn  package
      - name: Nexus Repo Publish  #https://github.com/marketplace/actions/nexus-repository-publisher-for-github-actions
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
         serverUrl: http://172.28.184.13:8081/
         username: admin
         #password: ${{ secrets.password }}
         password: admin123
         format: maven2
         repository: maven-releases
         coordinates: groupId=com.example artifactId=app version=1.0.0
         assets: extension=jar
         #filename: ./target/app-1.0.0.jar
    
